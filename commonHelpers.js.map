{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst button = document.querySelector('[data-start]');\nconst allDateFields = document.querySelectorAll('.value');\nbutton.disabled = true;\nlet userSelectedDate = null;\nlet interval = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    // interval = userSelectedDate - new Date();\n\n    if (userSelectedDate <= Date.now()) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      });\n      button.disabled = true;\n      button.classList.remove('button-active');\n    } else {\n      button.disabled = false;\n      button.classList.add('button-active');\n    }\n  },\n};\nconst fp = flatpickr(input, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nbutton.addEventListener('click', () => {\n  button.disabled = true;\n  input.disabled = true;\n\n  const intervalId = setInterval(() => {\n    interval = userSelectedDate - Date.now();\n\n    button.classList.remove('button-active');\n    if (interval < 1) {\n      clearInterval(interval);\n      return;\n    }\n    const timer = convertMs(interval);\n    allDateFields[0].innerText = addLeadingZero(timer.days);\n    allDateFields[1].innerText = addLeadingZero(timer.hours);\n    allDateFields[2].innerText = addLeadingZero(timer.minutes);\n    allDateFields[3].innerText = addLeadingZero(timer.seconds);\n  }, 1000);\n});\n"],"names":["input","button","allDateFields","userSelectedDate","interval","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","timer"],"mappings":"2GAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAgB,SAAS,iBAAiB,QAAQ,EACxDD,EAAO,SAAW,GAClB,IAAIE,EAAmB,KACnBC,EAAW,KAEf,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAG9BH,GAAoB,KAAK,OAC3BI,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,EACDN,EAAO,SAAW,GAClBA,EAAO,UAAU,OAAO,eAAe,IAEvCA,EAAO,SAAW,GAClBA,EAAO,UAAU,IAAI,eAAe,EAEvC,CACH,EACWO,EAAUR,EAAOK,CAAO,EAEnC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAf,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,SAAW,GAClBD,EAAM,SAAW,GAEE,YAAY,IAAM,CAInC,GAHAI,EAAWD,EAAmB,KAAK,MAEnCF,EAAO,UAAU,OAAO,eAAe,EACnCG,EAAW,EAAG,CAChB,cAAcA,CAAQ,EACtB,MACD,CACD,MAAMa,EAAQR,EAAUL,CAAQ,EAChCF,EAAc,CAAC,EAAE,UAAYa,EAAeE,EAAM,IAAI,EACtDf,EAAc,CAAC,EAAE,UAAYa,EAAeE,EAAM,KAAK,EACvDf,EAAc,CAAC,EAAE,UAAYa,EAAeE,EAAM,OAAO,EACzDf,EAAc,CAAC,EAAE,UAAYa,EAAeE,EAAM,OAAO,CAC1D,EAAE,GAAI,CACT,CAAC"}